name: Cleanup old workflow runs

on:
  workflow_dispatch:
    inputs:
      days:
        description: "Șterge rulările mai vechi de (zile)"
        required: true
        default: "1"

permissions:
  actions: write
  contents: read

concurrency:
  group: cleanup-old-runs
  cancel-in-progress: false

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Delete runs older than N days
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;

            const daysStr = core.getInput('days') || '1';
            const days = Math.max(1, parseInt(daysStr, 10) || 1);
            const cutoff = new Date(Date.now() - days * 24 * 60 * 60 * 1000);

            core.info(`Repository: ${owner}/${repo}`);
            core.info(`Cutoff: ${cutoff.toISOString()} (older than ${days} day(s))`);

            // Paginăm toate rulările din repo
            const runs = await github.paginate(
              github.rest.actions.listWorkflowRunsForRepo,
              { owner, repo, per_page: 100 }
            );

            let deleted = 0, kept = 0, errors = 0;

            for (const run of runs) {
              const created = new Date(run.created_at);

              // Sărim peste rulările noi sau active
              const isActive = run.status === 'in_progress' || run.status === 'queued';
              if (created >= cutoff || isActive) { kept++; continue; }

              try {
                await github.rest.actions.deleteWorkflowRun({ owner, repo, run_id: run.id });
                core.info(`Deleted run #${run.run_number} (${run.id}) from ${run.created_at} [${run.name}]`);
                deleted++;
              } catch (err) {
                core.warning(`Could not delete run ${run.id}: ${err.message}`);
                errors++;
              }
            }

            core.summary
              .addHeading('Cleanup summary', 3)
              .addTable([
                [{data: 'Metric', header: true}, {data: 'Value', header: true}],
                ['Cutoff', cutoff.toISOString()],
                ['Deleted', String(deleted)],
                ['Kept/Skipped', String(kept)],
                ['Errors', String(errors)]
              ])
              .write();
